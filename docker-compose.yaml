services:
  # traefik:
  #   image: traefik
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--entrypoints.web.address=:80"
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   labels:
  #     - "traefik.enable=false"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  frontend: 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 80:80
    # labels:
    #     - "traefik.enable=true"
    #     - "traefik.http.routers.frontend-chat.rule=Host(`chat.example.in`) || Host(`api.example.in`)"
    #     - "traefik.http.services.frontend-chat.loadbalancer.server.port=80"
    #     - "traefik.http.routers.frontend-chat.entrypoints=web"
    depends_on:
      - backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - mongo
    environment:
      - MONGO_URL=mongodb://root:example@mongo:27017/chatApp?authSource=admin
  mongo:
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    labels:
      - "traefik.enable=false"

# apk add wireguard-tools nano && nano /etc/wireguard/wg0.conf && wg-quick up wg0 